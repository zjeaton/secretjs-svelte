import{S as Ee,i as Ae,s as Ie,e as n,t as m,k as w,c as a,a as i,h as v,d as t,m as h,b as r,g as x,J as e,K as ke,L as Ce,n as ue,w as Te}from"../../chunks/index-b2769ec2.js";import{b as Se}from"../../chunks/browser-fec7e7ad.js";function Re(z){let g,I,l,d,y,b,u,o,S,j,U,p,K,c,E,k,$,J,q,Q,C,B,G,X,T,D,Y,N,O,Z,ee,R,te,M,f,se,ne,ae,re,le,oe,ie,H,ce,de,pe;return{c(){g=n("h1"),I=m("Sending sSCRT using Keplr Wallet"),l=w(),d=n("h2"),y=m("This executes a live transaction on mainnet!"),b=w(),u=n("div"),o=n("div"),S=n("b"),j=m("Address:"),U=w(),p=n("div"),K=w(),c=n("form"),E=n("div"),k=n("label"),$=m("Recipient"),J=w(),q=n("input"),Q=w(),C=n("div"),B=n("label"),G=m("Amount"),X=w(),T=n("div"),D=n("input"),Y=w(),N=n("div"),O=n("div"),Z=m("sSCRT"),ee=w(),R=n("button"),te=m("Submit"),M=w(),f=n("p"),se=m("If you want it to work:"),ne=n("br"),ae=m(`\r
    npm install @keplr-wallet/types`),re=n("br"),le=m(`\r
    and then create window.d.ts within src`),oe=n("br"),ie=w(),H=n("a"),ce=m("Use this file"),this.h()},l(s){g=a(s,"H1",{});var _=i(g);I=v(_,"Sending sSCRT using Keplr Wallet"),_.forEach(t),l=h(s),d=a(s,"H2",{});var fe=i(d);y=v(fe,"This executes a live transaction on mainnet!"),fe.forEach(t),b=h(s),u=a(s,"DIV",{id:!0});var me=i(u);o=a(me,"DIV",{class:!0});var V=i(o);S=a(V,"B",{});var we=i(S);j=v(we,"Address:"),we.forEach(t),U=h(V),p=a(V,"DIV",{id:!0}),i(p).forEach(t),K=h(V),c=a(V,"FORM",{});var L=i(c);E=a(L,"DIV",{class:!0});var F=i(E);k=a(F,"LABEL",{for:!0});var ve=i(k);$=v(ve,"Recipient"),ve.forEach(t),J=h(F),q=a(F,"INPUT",{class:!0,id:!0,name:!0}),F.forEach(t),Q=h(L),C=a(L,"DIV",{class:!0});var P=i(C);B=a(P,"LABEL",{for:!0});var he=i(B);G=v(he,"Amount"),he.forEach(t),X=h(P),T=a(P,"DIV",{class:!0});var W=i(T);D=a(W,"INPUT",{class:!0,id:!0,name:!0}),Y=h(W),N=a(W,"DIV",{class:!0});var ge=i(N);O=a(ge,"DIV",{class:!0});var ye=i(O);Z=v(ye,"sSCRT"),ye.forEach(t),ge.forEach(t),W.forEach(t),P.forEach(t),ee=h(L),R=a(L,"BUTTON",{type:!0,class:!0});var be=i(R);te=v(be,"Submit"),be.forEach(t),L.forEach(t),V.forEach(t),me.forEach(t),M=h(s),f=a(s,"P",{});var A=i(f);se=v(A,"If you want it to work:"),ne=a(A,"BR",{}),ae=v(A,`\r
    npm install @keplr-wallet/types`),re=a(A,"BR",{}),le=v(A,`\r
    and then create window.d.ts within src`),oe=a(A,"BR",{}),ie=h(A),H=a(A,"A",{href:!0});var _e=i(H);ce=v(_e,"Use this file"),_e.forEach(t),A.forEach(t),this.h()},h(){r(p,"id","address"),r(k,"for","recipient"),r(q,"class","form-control"),r(q,"id","recipient"),r(q,"name","recipient"),r(E,"class","form-group"),r(B,"for","amount"),r(D,"class","form-control"),r(D,"id","amount"),r(D,"name","amount"),r(O,"class","input-group-text"),r(N,"class","input-group-append"),r(T,"class","input-group"),r(C,"class","form-group"),r(R,"type","submit"),r(R,"class","btn btn-primary"),r(o,"class","container-sm"),r(u,"id","app"),r(H,"href",`\r
    https://docs.keplr.app/api/#using-with-typescript`)},m(s,_){x(s,g,_),e(g,I),x(s,l,_),x(s,d,_),e(d,y),x(s,b,_),x(s,u,_),e(u,o),e(o,S),e(S,j),e(o,U),e(o,p),e(o,K),e(o,c),e(c,E),e(E,k),e(k,$),e(E,J),e(E,q),e(c,Q),e(c,C),e(C,B),e(B,G),e(C,X),e(C,T),e(T,D),e(T,Y),e(T,N),e(N,O),e(O,Z),e(c,ee),e(c,R),e(R,te),x(s,M,_),x(s,f,_),e(f,se),e(f,ne),e(f,ae),e(f,re),e(f,le),e(f,oe),e(f,ie),e(f,H),e(H,ce),de||(pe=ke(c,"submit",Ce(z[0])),de=!0)},p:ue,i:ue,o:ue,d(s){s&&t(g),s&&t(l),s&&t(d),s&&t(b),s&&t(u),s&&t(M),s&&t(f),de=!1,pe()}}}function xe(z){Te(async()=>{const I=u=>new Promise(o=>setTimeout(o,u));for(;!window.keplr||!window.getEnigmaUtils||!window.getOfflineSignerOnlyAmino;)await I(100);const l="secret-4";await window.keplr.enable(l);const d=window.getOfflineSignerOnlyAmino(l),[{address:y}]=await d.getAccounts(),b=await Se.exports.SecretNetworkClient.create({grpcWebUrl:"https://secret-4.api.trivium.network:9091",chainId:l,wallet:d,walletAddress:y,encryptionUtils:window.getEnigmaUtils(l)});console.log("secretjs",b),console.log("myAddress:",y),document.getElementById("address").append(y)});function g(){let I=document.getElementById("recipient").value;console.log("recipient:",I);let l=document.getElementById("amount").value;return console.log("amount:",l),l=parseFloat(l),isNaN(l)?(alert("Invalid amount"),!1):(l*=1e6,l=Math.floor(l),(async()=>{const d="secret-4",y=window.getOfflineSignerOnlyAmino(d),[{address:b}]=await y.getAccounts(),u=await Se.exports.SecretNetworkClient.create({grpcWebUrl:"https://secret-4.api.trivium.network:9091",chainId:d,wallet:y,walletAddress:b,encryptionUtils:window.getEnigmaUtils(d)}),o="secret1k0jntykt7e4g3y88ltc60czgjuqdy4c9e8fzek",S=await u.query.compute.contractCodeHash(o),U={balance:{key:await window.keplr.getSecret20ViewingKey(d,o),address:b}};let p=await u.query.compute.queryContract({contractAddress:o,codeHash:S,query:U});console.log("balance",p),p=p.balance.amount/1e6,console.log("My token balance: ",p);let K={transfer:{recipient:I,amount:String(l)}};console.log("Transferring tokens");let c=await u.tx.compute.executeContract({sender:b,contractAddress:o,codeHash:S,msg:K,sentFunds:[]},{gasLimit:1e5});console.log("Transfer response: ",c),p=await u.query.compute.queryContract({contractAddress:o,codeHash:S,query:U}),p=p.balance.amount/1e6,console.log("New sSCRT balance",p),c.code!==void 0&&c.code!==0?alert("Failed to send tx: "+c.log||c.rawLog):alert("Succeed to send tx"),document.querySelectorAll(".form-control").forEach(k=>{k.value=""})})(),!1)}return[g]}class Be extends Ee{constructor(g){super(),Ae(this,g,xe,Re,Ie,{})}}export{Be as default};
